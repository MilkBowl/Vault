plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'checkstyle'
  id 'net.minecrell.licenser' version '0.3'
  id 'com.github.johnrengelman.shadow' version '1.2.4'
}

allprojects {
  group = 'org.natrolite'
  description = 'Vault is a Permissions and Economy API'
  version = '1.6.1'
}

repositories {
  mavenCentral()
  maven { url 'https://repo.natrolite.org/repository/maven-public/' }
  maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  maven { url 'https://repo.bstats.org/content/repositories/releases/' }
}

dependencies {
  compileOnly group: 'org.bukkit', name: 'bukkit', version: '1.8-R0.1-SNAPSHOT'
  testCompile group: 'org.bukkit', name: 'bukkit', version: '1.8-R0.1-SNAPSHOT'

  compile group: 'org.natrolite', name: 'vault-api', version: '1.6.1.1'
  compile group: 'org.bstats', name: 'bstats-bukkit', version: '1.1'

  // Libraries
  compileOnly fileTree(dir: 'libs', include: ['*.jar'])
  compileOnly group: 'com.greatmancode', name: 'craftconomy3', version: '3.2.2-SNAPSHOT'
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

license {
  header = file('HEADER.txt')
  include '**/*.java'
  include '**/*.yml'
  newLine = true
  exclude 'net/milkbowl/vault/util/VersionComparator.java'
}

processResources {
  from 'LICENSE.txt'
  from 'THIRD-PARTY-LICENSES.txt'
  expand(version: version, description: project.description)
}

compileJava {
  sourceCompatibility = '1.7'
  targetCompatibility = '1.7'
  options.encoding = 'UTF-8'
}

compileTestJava {
  sourceCompatibility = '1.7'
  targetCompatibility = '1.7'
  options.encoding = 'UTF-8'
}

checkstyle {
  toolVersion = '8.0'
  configFile = file('checkstyle.xml')
}

task sourceJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourceJar
  archives javadocJar
}

shadowJar {
  classifier = 'shaded'
  relocate 'org.bstats', 'net.milkbowl.vault'
}

task checkstyle(dependsOn: tasks.withType(Checkstyle))

gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
  if (!graph.allTasks.contains(tasks.checkstyle)) {
    graph.allTasks.findAll {
      it.name.startsWith('checkstyle')
    }.each {
      it.enabled = false
    }
  }
}

build.dependsOn(shadowJar)

task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
}

apply from: 'gradle/deploy.gradle'
